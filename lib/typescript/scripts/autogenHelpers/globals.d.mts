export function getValue(value: any, defaultValue: any): any;
export function exists(value: any): boolean;
export function camelCase(str: any, delimiter?: string): any;
export function pascelCase(str: any, delimiter?: string): any;
export function setLayerMethodName(layer: any, platform: any): string;
export function getLayerType(layer: any, platform: any): "Light" | "FillLayer" | "FillExtrusionLayer" | "CircleLayer" | "HeatmapLayer" | "LineLayer" | "ModelLayer" | "SymbolLayer" | "BackgroundLayer" | "RasterLayer" | "SkyLayer" | "Terrain" | "Atmosphere" | "MGLFillStyleLayer" | "MGLFillExtrusionStyleLayer" | "MGLLineStyleLayer" | "MGLSymbolStyleLayer" | "MGLCircleStyleLayer" | "MGLBackgroundStyleLayer" | "MGLRasterStyleLayer" | "MGLHeatmapStyleLayer" | "MGLHillshadeStyleLayer" | "HillshadeLayer" | "MGLLight" | "MGLSkyLayer" | "MGLAtmosphere" | "MGLTerrain";
export function ifOrElseIf(index: any): "if" | "} else if";
export function iosStringArrayLiteral(arr: any): string;
export function iosPropName(name: any): any;
export function iosMapLibrePropName(name: any): "fillExtrusionHasVerticalGradient" | undefined;
export function iosV10PropName(name: any): any;
export function iosPropMethodName(layer: any, name: any): any;
export function androidInputType(type: any, value: any): any;
export function androidOutputType(type: any, value: any): any;
export function androidGetConfigTypeKt(androidType: any, prop: any): "styleValue.getInt(VALUE_KEY)" | "styleValue.getDouble(VALUE_KEY)" | "styleValue.getBoolean(VALUE_KEY)" | "styleValue.getFloatArray(VALUE_KEY)" | "styleValue.getStringArray(VALUE_KEY)" | "styleValue.imageURI" | "styleValue.getString(VALUE_KEY)";
export function androidGetConfigType(androidType: any, prop: any): "styleValue.getInt(VALUE_KEY)" | "styleValue.getBoolean(VALUE_KEY)" | "styleValue.getFloatArray(VALUE_KEY)" | "styleValue.getStringArray(VALUE_KEY)" | "styleValue.getString(VALUE_KEY)" | "styleValue.getFloat(VALUE_KEY)" | "styleValue.getImageURI()";
export function jsStyleType(prop: any): "StyleTypes.Color" | "StyleTypes.Enum" | "StyleTypes.Image" | "StyleTypes.Translation" | "StyleTypes.Constant";
export function jsDocPropRequires(prop: any): string | undefined;
export function getEnums(layers: any): any[];
export function dtsInterfaceType(prop: any): string | undefined;
export function jsDocReactProp(prop: any): string | undefined;
export function startAtSpace(spaceCount: any, str: any): string;
export function replaceNewLine(str: any): any;
export function codeQuote(str: any, maxwidth: any): any;
export function styleMarkdownTableRow(style: any): string;
export function methodMarkdownTableRow(method: any): any;
export function propType(prop: any): any;
export function propDescription(prop: any, mdx: any): any;
export function examplePropLinks(prop: any, component: any): any;
export function exampleMethodLinks(method: any, component: any): any;
export function getMarkdownMethodSignature(method: any, mdx: any): string;
export function getMarkdownMethodExamples(method: any): any;
export function getStyleDefaultValue(style: any): any;
//# sourceMappingURL=globals.d.mts.map